#main riff
use_bpm 126
Dloop = "C:/Users/jcsan/Downloads/better_sample.wav"
fade = "C:/Users/jcsan/Downloads/fade out.wav"
trans = "C:/Users/jcsan/Downloads/find song.wav"
finals = "C:/Users/jcsan/Downloads/Computer Crash - Free Sound Effect.wav"

use_bpm 126
slide = [43, 42, 41, 40, 39]
leep = 0.5
i = 0
define :vocals do
  use_bpm 126
  use_synth :chiplead
  with_fx :bitcrusher do
    play :r
    sleep 0.5
    play :bf4, amp: 0.5
    sleep 0.5
    play :bf4, amp: 0.5
    sleep 0.5
    play :g4, amp: 0.5
    sleep 0.5
    3.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
    play :g4, amp: 0.5
    sleep 0.5
    play :bf4, amp: 0.5
    sleep 0.5
    play :g4, amp: 0.5
    sleep 3
    2.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
    sleep 0.5
    3.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
    play :g4, amp: 0.5
    sleep 0.5
    2.times do
      play :c5, amp: 0.5
      sleep 0.5
    end
    play :c5, amp: 0.5
    sleep 1
    play :bf4, amp: 0.5
    sleep 2.5
    2.times do
      play :c5, amp: 0.5
      sleep 0.5
    end
    play :bf4, amp: 0.5
    sleep 0.5
    play :c5, amp: 0.5
    sleep 0.5
    play :bf4, amp: 0.5
    sleep 0.5
    play :d5, amp: 0.5
    sleep 0.5
    play :c5, amp: 0.5
    sleep 0.5
    play :bf4, amp: 0.5
    sleep 3.5
    2.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
    sleep 0.5
    3.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
    play :g4, amp: 0.5
    sleep 0.5
    3.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
    sleep 0.5
    play :bf4, amp: 0.5
    sleep 1
    play :g4, amp: 0.5
    sleep 0.5
    play :bf4, amp: 0.5
    sleep 0.5
    2.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
    play :g4, amp: 0.5
    sleep 1
    2.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
    play :g4, amp: 0.5
    sleep 0.5
    play :bf4, amp: 0.5
    sleep 0.5
    play :c5, amp: 0.5
    sleep 0.5
    play :bf4, amp: 0.5
    sleep 3
    5.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
    sleep 0.5
    play :bf4, amp: 0.5
    sleep 1
    3.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
    play :bf4, amp: 0.5
    sleep 1
    play :g4, amp: 0.5
    sleep 2
    play :bf4, amp: 0.5
    sleep 1
    play :bf4, amp: 0.5
    sleep 0.5
    play :bf4, amp: 0.5
    sleep 1
    play :bf4, amp: 0.5
    sleep 0.5
    play :bf4, amp: 0.5
    sleep 0.5
    play :g4, amp: 0.5
    sleep 0.5
    play :d5, amp: 0.5
    sleep 0.5
    play :c5, amp: 0.5
    sleep 1
    play :bf4, amp: 0.5
    sleep 0.5
    2.times do
      play :bf4, amp: 0.5
      sleep 0.75
    end
    2.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
    2.times do
      play :bf4, amp: 0.5
      sleep 0.75
    end
    2.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
    2.times do
      play :bf4, amp: 0.5
      sleep 0.75
    end
    2.times do
      play :bf4, amp: 0.5
      sleep 0.5
    end
  end
end

define :broken do
  with_fx :bitcrusher do
    play :bf2
    sleep 1
    play :bf2
    sleep 0.5
    play :af2
    sleep 0.5
    play :af2
    sleep 0.5
    play :af2
    sleep 0.5
    play :af2
    sleep 0.5
    5.times do
      play(slide[i])
      i = i + 1
      sleep 0.25/5
    end
    sleep 0.25
    play :d2
  end
end

use_synth :chipbass
define :Ro do |n1,n2,n3|
  with_fx :bitcrusher do
    play n1
    sleep 0.5
    play n2
    sleep 1
    play n3
    sleep 0.5
  end
end
define :two do
  with_fx :bitcrusher do
    play :f3
    sleep 0.5
    play :f3
    sleep 1
    play :ef3
    sleep 0.5
    play :f3
    sleep 0.5
    play :a3
    sleep 0.5
    play :c3
    sleep 0.5
    play :c3
    sleep 0.5
  end
end
define :fill do
  with_fx :bitcrusher do
    play :ff3
    sleep 0.25
    play :ff3
    sleep 0.25
    play :ff3
    sleep 0.5
    play :ff3
    sleep 0.5
    play :ff3
    sleep 0.5
  end
end

#breakdown functions
define :brok do
  play :f2, sustain: 4,amp: 2
  sleep 4
  play :f2
  sleep 0.5
  play :ef3
  sleep 0.5
  play :e3
  sleep 0.5
  play :f3
  sleep 1
  play :a3
  sleep 1
  play :c3
  sleep 0.5
  play :d3, sustain: 2.5
  sleep 3
  play :d3
  sleep 0.5
  play :bf2
  sleep 0.5
end
define :broke do
  play :bf2
  sleep 1
  play :bf2
  sleep 0.5
  play :af2
  sleep 0.5
  play :af2
  sleep 1
  play :af2
  sleep 0.5
  play :f2
  sleep 0.5
end

#intro
sample trans
wait 30
sample Dloop, start: 0, finish: 0.95, amp: 4
wait 2
live_loop :pO do
  2.times do
    Ro :f3,:f3,:ef3
  end
  two
  2.times do
    Ro :d3,:d3,:c3
  end
  Ro :bf2,:bf2,:bf2
  Ro :ff3,:ff3,:ff3
  2.times do
    Ro :f3,:f3,:ef3
  end
  two
  2.times do
    Ro :d3,:d3,:c3
  end
  Ro :bf2,:bf2,:bf2
  fill
  2.times do
    Ro :f3,:f3,:ef3
  end
  two
  2.times do
    Ro :d3,:d3,:c3
  end
  Ro :bf2,:bf2,:bf2
  Ro :ff3,:ff3,:ff3
  2.times do
    Ro :f3,:f3,:ef3
  end
  two
  2.times do
    Ro :d3,:d3,:c3
  end
  Ro :bf2,:bf2,:r
  stop
end

live_loop :vocs do
  vocals
  stop
end
#breakdown
wait 64
brok
broke
brok
broken
live_loop :p2 do
  2.times do
    Ro :f3,:f3,:ef3
  end
  two
  2.times do
    Ro :d3,:d3,:c3
  end
  Ro :bf2,:bf2,:bf2
  Ro :ff3,:ff3,:ff3
  2.times do
    Ro :f3,:f3,:ef3
  end
  two
  2.times do
    Ro :d3,:d3,:c3
  end
  Ro :bf2,:bf2,:bf2
  fill
  2.times do
    Ro :f3,:f3,:ef3
  end
  two
  2.times do
    Ro :d3,:d3,:c3
  end
  Ro :bf2,:bf2,:bf2
  Ro :ff3,:ff3,:ff3
  2.times do
    Ro :f3,:f3,:ef3
  end
  two
  2.times do
    Ro :d3,:d3,:c3
  end
  Ro :bf2,:bf2,:r
  stop
end
wait 60
sample fade

s = [0.95,0.96,0.97,0.98,0.99,1]
a = [4,3,2,1,0,0]
e = [0.96,0.97,0.98,0.99,1,1]
i = 0
6.times do
  sample Dloop,start: s[i], finish: e[i], amp: a[i]
  sleep 1.5
  i = i+1
end
sample finals
